#This is the default resource bundle for your plugin.
#This file consists of key/value pairs that will be output
#into the web interface by the asset factory plugin framework
#for things such as the name and description of your plugin
#as well as the names and descriptions of the parameters your
#plugin uses.

#Note that if a key is not found in a localized version of the
#resource bundle, the default from here will be used. If no key
#is defined here the CMS will throw an error.

## Set Review Date plugin
plugin.assetfactory.setreviewdate.name=Set Review Date Plugin
plugin.assetfactory.setreviewdate.description=This plugin sets the user-supplied metadata review date value to the current date and time with an optional offset.
plugin.assetfactory.setreviewdate.param.offset.name=Offset
plugin.assetfactory.setreviewdate.param.offset.description=The new asset's review date will be calculated by adding this offset (in seconds) to the asset's creation time.

## Asset Fields plugin
plugin.assetfactory.assetfields.parameter.fieldids.name=Asset Field IDs
plugin.assetfactory.assetfields.parameter.fieldids.description=A comma separated list of Asset field identifiers.  May include Wired Metadata, Dynamic Metadata and/or Structured Data/Data Definition fields (e.g. display-name,dynamic-metadata/my-custom-field-name,system-data-structure/group-name/field-name).
plugin.assetfactory.assetfields.parameter.spacetoken.name=Space Token
plugin.assetfactory.assetfields.parameter.spacetoken.description=A URL-safe token to be used in place of any spaces found in the selected Asset Field values

## Asset Fields to System Name plugin keys
plugin.assetfactory.assetfieldstosystemname.name=Asset Fields to System Name Plug-in
plugin.assetfactory.assetfieldstosystemname.description=This plug-in will automatically generate a URL-safe system name for an asset, based on the provided Asset Field values.  Acceptable fields include Wired Metadata fields (e.g. title, display-name), Dynamic Metadata fields (e.g. dynamic-metadata/my-custom-field-name) and/or Structured Data/Data Definition fields (e.g. system-data-structure/group-name/field-name).  NOTE: For structured data fields, this plug-in is NOT designed to work with asset choosers or WYSIWYG fields.  For Calendar and Date/Time fields, values will be formatted as 'yyyy-mm-dd'; for all fields for which multiple values may be selected, the plug-in will concatenate all selected values.  The plug-in will change case to all lower-case, strip out any special characters, replace spaces with the provided Space Token and concatenate the selected field values with the provided Concatenation Token.  NOTE: This plug-in is only applicable to assets which are metadata aware and structured data capable (if structured data fields are specified) and will throw an exception disallowing creation of the asset if applied to any invalid type of asset, if any of the provided Asset Fields are invalid or if any of the provided Asset Fields have no value in the asset to be created.
plugin.assetfactory.assetfieldstosystemname.parameter.concattoken.name=Concatenation Token
plugin.assetfactory.assetfieldstosystemname.parameter.concattoken.description=A URL-safe token to be used to concatenate the values of the provided Page Fields

## Asset Fields to Folder Structure plugin keys
plugin.assetfactory.assetfieldstofolderstructure.name=Asset Fields to Folder Structure Plug-in
plugin.assetfactory.assetfieldstofolderstructure.description=This plug-in will automatically place an asset in the appropriate folder structure based on the provided Asset Field values, starting with the selected parent folder (or placement folder) of the asset.  Acceptable fields include Wired Metadata fields (e.g. title, display-name), Dynamic Metadata fields (e.g. dynamic-metadata/my-custom-field-name) and/or Structured Data/Data Definition fields (e.g. system-data-structure/group-name/field-name).  NOTE: For structured data fields, this plug-in is NOT designed to work with asset choosers or WYSIWYG fields.  For Calendar and Date/Time fields, single field values will attempt a drill-down search for a multi-tier year/month/day directory structure, starting with the four-digit year, then looking for month child directories, and finally day child directories, if applicable, stopping at the most granular matching level of the existing folder structure.  For all fields for which multiple values may be selected, the plug-in will place the asset within the folder represented by the FIRST value encountered.  The plug-in will change case to all lower-case, strip out any special characters, replace spaces with the provided Space Token and assume a nested directory structure if multiple fields are specified, with the first field being the highest level ancestor folder and the last field being the direct parent folder of the asset.  NOTE: This plug-in is only applicable to assets which are metadata aware and structured data capable (if structured data fields are specified) and will throw an exception disallowing creation of the asset if applied to any invalid type of asset, if any of the provided Asset Fields are invalid or if any of the provided Asset Fields have no value in the asset to be created.

## Publish Publish Set on Create plugin keys
plugin.assetfactory.publishpublishsetoncreate.name=Publish Publish Set on Create Plug-in
plugin.assetfactory.publishpublishsetoncreate.description=This plug-in will automatically publish a given Publish Set when an asset is created.
plugin.assetfactory.publishpublishsetoncreate.param.publishset.id.name=Publish Set ID
plugin.assetfactory.publishpublishsetoncreate.param.publishset.id.description=The ID of the Publish Set you wish to publish when the asset is created. Must be within the same Site as the asset.

## Friendly Folder Name plugin keys
plugin.assetfactory.friendlyfoldername.name=Friendly Folder Name Plug-in
plugin.assetfactory.friendlyfoldername.description=This plugin limits the system name of new folder assets to a configurable regular expression.
plugin.assetfactory.friendlyfoldername.param.regex.name=Name Regular Expression
plugin.assetfactory.friendlyfoldername.param.regex.description=Folders created by this asset factory must match this regular expression.

## Create Resized Images plugin keys
plugin.assetfactory.createresizedimages.name=Create Resized Images Plug-in
plugin.assetfactory.createresizedimages.description=This plugin will create resized copies of the original image.
plugin.assetfactory.createresizedimages.param.numadditionalimages.name=Number of Additional Images
plugin.assetfactory.createresizedimages.param.numadditionalimages.description=The number of additional images that will be created
plugin.assetfactory.createresizedimages.param.width.name=Widths
plugin.assetfactory.createresizedimages.param.width.description=A comma-delimited list of widths for the additional images. Example: ''450,20%''
plugin.assetfactory.createresizedimages.param.height.name=Heights
plugin.assetfactory.createresizedimages.param.height.description=A comma-delimited list of heights for the additional images. Example: ''600,20%''